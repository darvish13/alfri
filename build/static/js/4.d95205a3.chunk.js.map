{"version":3,"sources":["components/colorimetric/colorimetric_styles.js","components/waves/waves_styles.js","components/waves/HandleInputs.js","components/waves/DataForm.js","components/waves/Calculations.js","components/colorimetric/Colorimetric.js","components/Calculator.js"],"names":["MobileWidth","Container","styled","main","Card","div","Title","h1","TabBar","nav","Tab","selected","Paragraph","p","ResultList","ResultRow","Key","span","Value","b","Spacer","height","Grid","cols","gap","align","justify","Subtitle","h2","Small","small","InputsRow","Col","margin","InputWrapper","LoadingWrapper","RemoveField","DeleteIcon","DeleteForever","HR","hr","addInput","a","list","setList","listKeyName","localDbKey","localForage","getItem","localDB","setItem","RenderInputs","map","value","index","TextField","name","onChange","target","updatedList","label","defaultValue","variant","fullWidth","onClick","splice","RenderParams","style","marginRight","values","Button","size","color","startIcon","DeleteForeverOutlined","listIndex","Fab","aria-label","addParamInput","Add","RenderParamInputs","updatedValues","LocalDB","placeholder","DataForm","tabName","useState","Loading","setLoading","Oxid","setOxid","Reduced","setReduced","PosCtrls","setPosCtrls","NegCtrls","setNegCtrls","Params","setParams","anchorEl","setAnchorEl","open","Boolean","id","undefined","useEffect","getLocalValues","oxid","reduced","posCtrls","negCtrls","params","CircularProgress","textTransform","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","padding","window","location","reload","calcReduction","lower","higher","oxid_low","reduced_low","negCtrl_low","mean","concents_low","oxid_high","reduced_high","negCtrl_high","concents_high","headers","key","results","concent_low","calcDiffer","posCtrl_low","posCtrl_high","Colorimetric","TabName","setTabName","Results","setResults","Headers","setHeaders","setLocalData","RenderResults","BlurOn","BlurLinearOutlined","textAlign","data","textDecoration","filename","theme","createMuiTheme","palette","common","black","white","background","paper","default","primary","light","dark","contrastText","secondary","Calculator","StylesProvider","injectFirst"],"mappings":"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","file":"static/js/4.d95205a3.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst MobileWidth = '620px'\n\nexport const Container = styled.main`\n  max-width: 85%;\n  margin: auto;\n\n  @media (max-width: ${MobileWidth}) {\n    max-width: 100%;\n  }\n`\n\nexport const Card = styled.div`\n  margin: 4em 0;\n  padding: 1em 2em;\n  border-radius: 5px;\n  position: relative;\n  overflow: hidden;\n  padding-top: 3.5em;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n\n  @media (max-width: ${MobileWidth}) {\n    margin: 0;\n    padding: 1em;\n    padding-top: 3.5em;\n    border-radius: 0;\n    box-shadow: none;\n  }\n`\n\nexport const Title = styled.h1`\n  background-color: #38afff;\n  color: white;\n  font-size: 1.75em;\n  font-weight: bold;\n  text-align: left;\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin-top: 0;\n  width: 100%;\n  padding: 0.3em 1em;\n\n  @media (max-width: ${MobileWidth}) {\n    font-size: 1.25em;\n    padding: 0.6em;\n  }\n`\n\nexport const TabBar = styled.nav`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  background: #aaddff;\n  border-radius: 5px;\n  overflow: hidden;\n  margin: 3em auto 0 auto;\n`\n\nexport const Tab = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 100%;\n  height: 2.5em;\n  color: white;\n  font-weight: bold;\n  font-size: 1.25em;\n  background-color: ${({ selected }) => (selected ? '#38afff' : 'transparent')};\n  transition: all ease-in 0.2s;\n  /* text-transform: uppercase; */\n\n  @media (max-width: ${MobileWidth}) {\n    font-size: 0.95em;\n  }\n`\n\nexport const Paragraph = styled.p`\n  color: #4f5963;\n  font-size: 1em;\n  font-weight: 500;\n\n  @media (max-width: ${MobileWidth}) {\n    font-size: 0.9em;\n  }\n`\n\nexport const ResultList = styled.div``\n\nexport const ResultRow = styled.div`\n  display: grid;\n  grid-template-columns: 8em auto;\n  grid-gap: 2em;\n  margin: 1em 0;\n  border-bottom: 1px solid lightblue;\n  padding-bottom: 0.5em;\n`\n\nexport const Key = styled.span`\n  color: #4f5963;\n`\n\nexport const Value = styled.b`\n  color: #38afff;\n  font-size: 1.1em;\n`\n","import { Fab } from '@material-ui/core'\nimport { DeleteForever } from '@material-ui/icons'\nimport styled from 'styled-components'\n\nconst MobileWidth = '620px'\n\nexport const Container = styled.div`\n  padding: 1em 0.25em;\n`\n\nexport const Spacer = styled.div`\n  height: ${({ height }) => height || '1em'};\n`\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${({ cols }) => cols}, 1fr);\n  grid-gap: ${({ gap }) => (gap ? gap : '2em')};\n  align-items: ${({ align }) => align || 'start'};\n  justify-content: ${({ justify }) => justify || 'start'};\n`\n\nexport const Subtitle = styled.h2`\n  font-size: 1.15em;\n  color: #4f5963;\n`\n\nexport const Small = styled.small`\n  color: gray;\n  font-weight: lighter;\n  font-size: 0.65em;\n`\n\nexport const InputsRow = styled.div`\n  display: flex;\n  overflow-x: auto;\n`\n\nexport const Col = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  margin: ${({ margin }) => margin || 0};\n`\n\nexport const InputWrapper = styled.div`\n  margin: 0.5em 0;\n  min-width: 13vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n\n  @media (max-width: ${MobileWidth}) {\n    min-width: 37vw;\n  }\n`\n\nexport const LoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 4em auto;\n`\n\nexport const RemoveField = styled.div`\n  position: absolute;\n  top: -0.5em;\n  right: -0.5em;\n  width: 2em;\n  height: 2em;\n  border-radius: 100%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f0f0f0;\n  box-shadow: 0px 1px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`\n\nexport const DeleteIcon = styled(DeleteForever)`\n  font-size: 1.25em;\n  color: red;\n`\n\nexport const HR = styled.hr`\n  margin: 2em auto 1em auto;\n`\n","import { Button, Fab, TextField } from '@material-ui/core'\nimport { Add, DeleteForeverOutlined } from '@material-ui/icons'\nimport localForage from 'localforage'\nimport {\n  DeleteIcon,\n  InputsRow,\n  InputWrapper,\n  RemoveField,\n  Col,\n  Spacer,\n} from './waves_styles'\n\n/**\n * Add Input\n */\nexport const addInput = async ({ list, setList, listKeyName, localDbKey }) => {\n  setList([...list, 0])\n\n  const localDB = await localForage.getItem(localDbKey)\n  await localForage.setItem(localDbKey, {\n    ...localDB,\n    [listKeyName]: [...list, 0],\n  })\n}\n\n/**\n * Render Inputs\n */\nexport const RenderInputs = ({ list, setList, listKeyName, localDbKey }) =>\n  list.map((value, index) => (\n    <InputWrapper key={index}>\n      <TextField\n        name={`posCtrl_${index + 1}`}\n        value={list[index]}\n        onChange={async ({ target: { value } }) => {\n          let updatedList = [...list]\n          updatedList[index] = value\n          setList(updatedList)\n\n          const localDB = await localForage.getItem(localDbKey)\n          await localForage.setItem(localDbKey, {\n            ...localDB,\n            [listKeyName]: updatedList,\n          })\n        }}\n        label={`Absorbance ${index + 1}`}\n        defaultValue={0}\n        variant='outlined'\n        fullWidth\n      />\n\n      <RemoveField\n        onClick={async () => {\n          let updatedList = [...list]\n          updatedList.splice(index, 1)\n\n          setList(updatedList)\n\n          const localDB = await localForage.getItem(localDbKey)\n          await localForage.setItem(localDbKey, {\n            ...localDB,\n            [listKeyName]: updatedList,\n          })\n        }}\n      >\n        <DeleteIcon />\n      </RemoveField>\n    </InputWrapper>\n  ))\n\n/**\n * Render Params\n */\nexport const RenderParams = (\n  { list, setList, listKeyName, localDbKey },\n  index\n) => (\n  <InputsRow style={{ marginRight: '-1.5em' }}>\n    {list.map(({ name, values }, index) => (\n      <Col margin='0 0.85em' key={index}>\n        <Spacer />\n\n        <Button\n          variant='outlined'\n          size='small'\n          color='secondary'\n          startIcon={<DeleteForeverOutlined />}\n          onClick={async () => {\n            let updatedList = [...list]\n            updatedList.splice(index, 1)\n            setList(updatedList)\n\n            const localDB = await localForage.getItem(localDbKey)\n            await localForage.setItem(localDbKey, {\n              ...localDB,\n              [listKeyName]: updatedList,\n            })\n          }}\n        >\n          Del Param {index + 1}\n        </Button>\n\n        <Spacer />\n\n        <InputWrapper>\n          <TextField\n            value={name}\n            onChange={async ({ target: { value } }) => {\n              let updatedList = [...list]\n              updatedList[index].name = value\n              setList(updatedList)\n\n              const localDB = await localForage.getItem(localDbKey)\n              await localForage.setItem(localDbKey, {\n                ...localDB,\n                [listKeyName]: updatedList,\n              })\n            }}\n            label={`Param ${index + 1}`}\n            name={`Param ${index + 1}`}\n            fullWidth\n          />\n        </InputWrapper>\n\n        <Spacer />\n\n        <RenderParamInputs\n          listIndex={index}\n          values={values}\n          list={list}\n          setList={setList}\n          listKeyName={listKeyName}\n          localDbKey={localDbKey}\n        />\n\n        <Spacer />\n\n        <Fab\n          size='small'\n          color='primary'\n          aria-label='add'\n          onClick={() =>\n            addParamInput({\n              listIndex: index,\n              values,\n              list,\n              setList,\n              listKeyName,\n              localDbKey,\n            })\n          }\n        >\n          <Add />\n        </Fab>\n\n        <Spacer />\n      </Col>\n    ))}\n\n    <Col margin='0 0.85em'>\n      <Spacer />\n\n      <Fab\n        variant='extended'\n        size='small'\n        color='primary'\n        aria-label='add'\n        onClick={async () => {\n          setList([\n            ...list,\n            {\n              name: '',\n              values: [0, 0, 0],\n            },\n          ])\n\n          const localDB = await localForage.getItem(localDbKey)\n          await localForage.setItem(localDbKey, {\n            ...localDB,\n            [listKeyName]: [\n              ...list,\n              {\n                name: '',\n                values: [0, 0, 0],\n              },\n            ],\n          })\n        }}\n        style={{\n          marginRight: '2em',\n        }}\n      >\n        <Add />\n        Param\n      </Fab>\n    </Col>\n  </InputsRow>\n)\n\n/**\n * Render Param Inputs\n */\nconst RenderParamInputs = ({\n  listIndex,\n  values,\n  list,\n  setList,\n  listKeyName,\n  localDbKey,\n}) =>\n  values.map((value, index) => (\n    <InputWrapper key={index}>\n      <TextField\n        value={value}\n        onChange={async ({ target: { value } }) => {\n          let updatedValues = [...values]\n          updatedValues[index] = value\n\n          let updatedList = [...list]\n          updatedList[listIndex].values = updatedValues\n\n          setList(updatedList)\n\n          const LocalDB = await localForage.getItem(localDbKey)\n          await localForage.setItem(localDbKey, {\n            ...LocalDB,\n            [listKeyName]: updatedList,\n          })\n        }}\n        variant='outlined'\n        label={`Absorbance ${index + 1}`}\n        name={`Absorbance ${index + 1}`}\n        placeholder='New Parameter'\n        fullWidth\n      />\n\n      <RemoveField\n        onClick={async () => {\n          let updatedValues = [...values]\n          updatedValues.splice(index, 1)\n\n          let updatedList = [...list]\n          updatedList[listIndex].values = updatedValues\n\n          setList(updatedList)\n\n          const localDB = await localForage.getItem(localDbKey)\n          await localForage.setItem(localDbKey, {\n            ...localDB,\n            [listKeyName]: updatedList,\n          })\n        }}\n      >\n        <DeleteIcon />\n      </RemoveField>\n    </InputWrapper>\n  ))\n\n/**\n * Add Param Input\n */\nexport const addParamInput = async ({\n  listIndex,\n  values,\n  list,\n  setList,\n  listKeyName,\n  localDbKey,\n}) => {\n  let updatedValues = [...values, 0]\n  let updatedList = [...list]\n  updatedList[listIndex].values = updatedValues\n\n  setList(updatedList)\n\n  const localDB = await localForage.getItem(localDbKey)\n  await localForage.setItem(localDbKey, {\n    ...localDB,\n    [listKeyName]: updatedList,\n  })\n}\n","import {\n  Container,\n  Grid,\n  InputsRow,\n  Col,\n  InputWrapper,\n  Small,\n  Spacer,\n  Subtitle,\n  LoadingWrapper,\n  RemoveField,\n  DeleteIcon,\n  HR,\n} from './waves_styles'\nimport {\n  Button,\n  CircularProgress,\n  TextField,\n  Fab,\n  Popover,\n} from '@material-ui/core'\nimport { useEffect, useState } from 'react'\nimport localForage from 'localforage'\nimport {\n  Add,\n  BlurLinear,\n  BlurLinearOutlined,\n  BlurOn,\n  BlurOnOutlined,\n  DeleteForeverOutlined,\n} from '@material-ui/icons'\nimport { addInput, RenderInputs, RenderParams } from './HandleInputs'\nimport { Paragraph } from '../colorimetric/colorimetric_styles'\n\n/**\n * Data form\n */\nconst DataForm = ({ tabName }) => {\n  /**\n   * States\n   */\n  const [Loading, setLoading] = useState(true)\n  const [Oxid, setOxid] = useState()\n  const [Reduced, setReduced] = useState()\n  const [PosCtrls, setPosCtrls] = useState([0, 0, 0])\n  const [NegCtrls, setNegCtrls] = useState([0, 0, 0])\n  const [Params, setParams] = useState([{ name: '', values: [0, 0, 0] }])\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'simple-popover' : undefined\n\n  /**\n   * Get initial values from local database\n   */\n  useEffect(() => {\n    getLocalValues()\n  }, [])\n\n  useEffect(() => {\n    getLocalValues()\n  }, [tabName])\n\n  /**\n   * Get local values\n   */\n  const getLocalValues = async () => {\n    const localDB = await localForage.getItem(tabName)\n\n    if (localDB) {\n      const { oxid, reduced, posCtrls, negCtrls, params } = localDB\n\n      oxid ? setOxid(oxid) : setOxid(0)\n      reduced ? setReduced(reduced) : setReduced(0)\n      posCtrls && setPosCtrls(posCtrls)\n      negCtrls && setNegCtrls(negCtrls)\n      params && setParams(params)\n    }\n\n    setLoading(false)\n  }\n\n  /**\n   * Render\n   */\n  if (Loading)\n    return (\n      <LoadingWrapper>\n        <CircularProgress />\n      </LoadingWrapper>\n    )\n\n  return (\n    <Container>\n      <Subtitle>\n        <b style={{ textTransform: 'capitalize' }}>{tabName}</b> Wavelengths\n        Data Form:\n      </Subtitle>\n\n      <Spacer />\n      <Grid cols={2} gap='1em' align='center'>\n        <small style={{ color: '#ff1744' }}>Clear previous data?</small>\n\n        <Button\n          variant='outlined'\n          size='small'\n          color='secondary'\n          startIcon={<DeleteForeverOutlined />}\n          onClick={handleClick}\n        >\n          Reset Form\n        </Button>\n\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'center',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'center',\n            horizontal: 'right',\n          }}\n        >\n          <Grid cols={2} align='center' style={{ padding: '1em' }}>\n            <b style={{ color: '#ff1744' }}>Are you sure?</b>\n\n            <Button\n              variant='contained'\n              color='secondary'\n              size='small'\n              onClick={async () => {\n                await localForage.setItem(tabName, null)\n                window.location.reload()\n              }}\n            >\n              CLEAR\n            </Button>\n          </Grid>\n        </Popover>\n      </Grid>\n      <Spacer />\n\n      <form>\n        <HR />\n        <Subtitle>Extinction Coefficients</Subtitle>\n\n        <Grid cols={2}>\n          <TextField\n            value={Oxid}\n            onChange={async ({ target: { value } }) => {\n              setOxid(value)\n\n              const localDB = await localForage.getItem(tabName)\n              await localForage.setItem(tabName, {\n                ...localDB,\n                oxid: value,\n              })\n            }}\n            label='Oxidised (O)'\n            // defaultValue={Oxid || 0}\n            placeholder={tabName == 'lower' ? '' : ''}\n            fullWidth\n          />\n\n          <TextField\n            value={Reduced}\n            onChange={async ({ target: { value } }) => {\n              setReduced(value)\n\n              const localDB = await localForage.getItem(tabName)\n              await localForage.setItem(tabName, {\n                ...localDB,\n                reduced: value,\n              })\n            }}\n            label='Reduced (R)'\n            // defaultValue={Reduced || 0}\n            placeholder={tabName == 'lower' ? '' : ''}\n            fullWidth\n          />\n        </Grid>\n\n        <Spacer height='1.5em' />\n\n        <HR />\n        <Subtitle>Controls</Subtitle>\n        <Paragraph>\n          Use <b style={{ color: '#38afff' }}>+</b> button to add more values\n        </Paragraph>\n\n        <Grid cols={2} gap='1.5em'>\n          <Col>\n            <Subtitle>\n              Negative Control\n              <br />\n              <Small>( alamarBlue + only media )</Small>\n            </Subtitle>\n\n            <Col>\n              <RenderInputs\n                list={NegCtrls}\n                setList={setNegCtrls}\n                listKeyName='negCtrls'\n                localDbKey={tabName}\n              />\n              <Spacer />\n\n              <Fab\n                size='small'\n                color='primary'\n                aria-label='add'\n                onClick={() =>\n                  addInput({\n                    list: NegCtrls,\n                    setList: setNegCtrls,\n                    listKeyName: 'negCtrls',\n                    localDbKey: { tabName },\n                  })\n                }\n              >\n                <Add />\n              </Fab>\n            </Col>\n          </Col>\n\n          <Col>\n            <Subtitle>\n              Positive Control\n              <br />\n              <Small>( alamarBlue + media + cells )</Small>\n            </Subtitle>\n\n            <Col>\n              <RenderInputs\n                list={PosCtrls}\n                setList={setPosCtrls}\n                listKeyName='posCtrls'\n                localDbKey={tabName}\n              />\n\n              <Spacer />\n\n              <Fab\n                size='small'\n                color='primary'\n                aria-label='add'\n                onClick={() =>\n                  addInput({\n                    list: PosCtrls,\n                    setList: setPosCtrls,\n                    listKeyName: 'posCtrls',\n                    localDbKey: { tabName },\n                  })\n                }\n              >\n                <Add />\n              </Fab>\n            </Col>\n          </Col>\n        </Grid>\n\n        <HR />\n        <Subtitle>Experimental Parametrs</Subtitle>\n        <Paragraph>\n          Use <b style={{ color: '#38afff' }}>+ Param</b> button to add more\n          parameters\n        </Paragraph>\n\n        <RenderParams\n          list={Params}\n          setList={setParams}\n          listKeyName='params'\n          localDbKey={tabName}\n        />\n      </form>\n    </Container>\n  )\n}\n\nexport default DataForm\n","import localForage from 'localforage'\nimport { mean } from 'mathjs'\n\n/**\n * Calculate Reduction\n */\nexport const calcReduction = async () => {\n  const lower = await localForage.getItem('lower')\n  const higher = await localForage.getItem('higher')\n\n  if (lower && higher) {\n    // oxid and reduced of lower wavelengths\n    const { oxid: oxid_low, reduced: reduced_low } = lower\n\n    // average of lower wavelength controls\n    const negCtrl_low = mean(lower.negCtrls)\n\n    // average of different concentrations of lower wavelengths\n    const concents_low = lower.params.map(({ name, values }) => ({\n      name,\n      value: mean(values),\n    }))\n\n    // oxid and reduced of higher wavelengths\n    const { oxid: oxid_high, reduced: reduced_high } = higher\n\n    // average of higher wavelength controls\n    const negCtrl_high = mean(higher.negCtrls)\n\n    // average of different concentrations of higher wavelengths\n    const concents_high = higher.params.map(({ name, values }) => ({\n      name,\n      value: mean(values),\n    }))\n\n    let headers = [\n      { label: 'Parameter', key: 'name' },\n      { label: 'Value', key: 'value' },\n    ]\n\n    const results = concents_low.map(({ name, value: concent_low }, index) => ({\n      name,\n      value:  (\n        (\n          (\n            (oxid_high * concent_low)\n            -\n            (oxid_low * concents_high[index].value)\n          )\n          /\n          (\n            (reduced_low * negCtrl_high)\n            -\n            (reduced_high * negCtrl_low)\n          )\n        )\n        *\n        100\n      )\n    }))\n\n    return { headers, results }\n  }\n\n  return []\n}\n\n/**\n * Calculate difference\n */\nexport const calcDiffer = async () => {\n  const lower = await localForage.getItem('lower')\n  const higher = await localForage.getItem('higher')\n\n  if (lower && higher) {\n      // oxid and reduced of lower wavelengths\n      const { oxid: oxid_low } = lower\n\n      // average of lower wavelength controls\n      const posCtrl_low = mean(lower.posCtrls)\n  \n      // average of different concentrations of lower wavelengths\n      const concents_low = lower.params.map(({ name, values }) => ({\n        name,\n        value: mean(values),\n      }))\n  \n      // oxid and reduced of higher wavelengths\n      const { oxid: oxid_high } = higher\n  \n      // average of higher wavelength controls\n      const posCtrl_high = mean(higher.posCtrls)\n  \n      // average of different concentrations of higher wavelengths\n      const concents_high = higher.params.map(({ name, values }) => ({\n        name,\n        value: mean(values),\n      }))\n\n      let headers = [\n        { label: 'Parameter', key: 'name' },\n        { label: 'Value', key: 'value' },\n      ]\n\n      const results = concents_low.map(({ name, value: concent_low }, index) => ({\n        name,\n        value:  (\n          (\n            (\n              (oxid_high * concent_low)\n              -\n              (oxid_low * concents_high[index].value)\n            )\n            /\n            (\n              (oxid_high * posCtrl_low)\n              -\n              (oxid_low * posCtrl_high)\n            )\n          )\n          *\n          100\n        )\n      }))\n  \n      return { headers, results }\n  }\n}","import {\n  Card,\n  Title,\n  TabBar,\n  Tab,\n  Container,\n  Paragraph,\n  ResultList,\n  ResultRow,\n  Key,\n  Value,\n} from './colorimetric_styles'\nimport { useEffect, useState } from 'react'\nimport DataForm from '../waves/DataForm'\n// import HigherWaves from '../waves/HigherWaves'\nimport localForage from 'localforage'\nimport {\n  Grid,\n  HR,\n  LoadingWrapper,\n  Spacer,\n  Subtitle,\n} from '../waves/waves_styles'\nimport { Button, CircularProgress, Fab } from '@material-ui/core'\nimport { BlurLinearOutlined, BlurOn, FilterNone } from '@material-ui/icons'\nimport { calcDiffer, calcReduction } from '../waves/Calculations'\nimport { CSVLink } from 'react-csv'\n\n/**\n * Colorimetrics\n */\nconst Colorimetric = () => {\n  /**\n   * States\n   */\n  const [TabName, setTabName] = useState('lower')\n  const [Loading, setLoading] = useState(false)\n  const [Results, setResults] = useState([])\n  const [Headers, setHeaders] = useState([])\n\n  /**\n   * Setting state values in indexedDB\n   */\n  useEffect(() => {\n    const setLocalData = async () => {\n      const lower = await localForage.getItem('lower')\n      const higher = await localForage.getItem('higher')\n\n      if (!lower) {\n        await localForage.setItem('lower', {\n          posCtrls: [0, 0, 0],\n          negCtrls: [0, 0, 0],\n          params: [{ name: '', values: [0, 0, 0] }],\n        })\n      }\n\n      if (!higher) {\n        await localForage.setItem('higher', {\n          posCtrls: [0, 0, 0],\n          negCtrls: [0, 0, 0],\n          params: [{ name: '', values: [0, 0, 0] }],\n        })\n      }\n\n      setLoading(false)\n    }\n\n    setLocalData()\n  }, [])\n\n  /**\n   * Render tabs\n   */\n  // const RenderTabs = () =>\n  //   TabName === 'lower' ? <DataForm /> : <HigherWaves />\n\n  /**\n   * Render\n   */\n  if (Loading)\n    return (\n      <LoadingWrapper>\n        <CircularProgress />\n      </LoadingWrapper>\n    )\n\n  /**\n   * Render Results\n   */\n  const RenderResults = () =>\n    Results.map(({ name, value }) => (\n      <ResultRow>\n        <Key>{name}:</Key>\n        <Value>{value}</Value>\n      </ResultRow>\n    ))\n\n  /**\n   * Render\n   */\n  return (\n    <>\n      <Container>\n        <Card>\n          <Title>Alamar Blue Colorimetric Calculator</Title>\n          <Paragraph>\n            Use the two tabs below to input your data separated by lower\n            wavelengths and higher wavelengths into the forms.\n          </Paragraph>\n          {/* <Divider /> */}\n\n          <TabBar>\n            <Tab\n              onClick={() => setTabName('lower')}\n              selected={TabName === 'lower'}\n            >\n              Lower Wavelength\n            </Tab>\n\n            <Tab\n              onClick={() => setTabName('higher')}\n              selected={TabName === 'higher'}\n            >\n              Higher Wavelength\n            </Tab>\n          </TabBar>\n\n          {/* <RenderTabs /> */}\n          <DataForm tabName={TabName} />\n\n          <HR />\n          <Subtitle>Calculations</Subtitle>\n\n          <Spacer />\n\n          <Grid cols={2} gap='2em'>\n            <Fab\n              variant='extended'\n              size='small'\n              color='primary'\n              aria-label='add'\n              onClick={async () => {\n                const { headers, results } = await calcDiffer()\n                setHeaders(headers)\n                setResults(results)\n              }}\n            >\n              <BlurOn />\n              Difference\n            </Fab>\n\n            <Button\n              variant='outlined'\n              size='small'\n              color='primary'\n              startIcon={<BlurLinearOutlined />}\n              // onClick={calcReduction}\n              onClick={async () => {\n                const { headers, results } = await calcReduction()\n                setHeaders(headers)\n                setResults(results)\n              }}\n            >\n              Reduction\n            </Button>\n          </Grid>\n\n          <Spacer />\n\n          <HR />\n          <Grid cols={2} align='center'>\n            <Subtitle>Results</Subtitle>\n\n            <div style={{ textAlign: 'right' }}>\n              <CSVLink\n                data={Results}\n                headers={Headers}\n                style={{ textDecoration: 'none', color: 'darkgray' }}\n                filename='Alamar_Blue_Results.csv'\n              >\n                <Button variant='contained'>\n                  <b>Download</b>\n                </Button>\n              </CSVLink>\n            </div>\n          </Grid>\n\n          <Spacer />\n\n          <ResultList>\n            <ResultRow>\n              <Key>\n                <b>Parameter</b>\n              </Key>\n\n              <Value>\n                <b>Value</b>\n              </Value>\n            </ResultRow>\n\n            <RenderResults />\n          </ResultList>\n\n          <Spacer />\n        </Card>\n      </Container>\n    </>\n  )\n}\n\nexport default Colorimetric\n","import { createMuiTheme, StylesProvider } from \"@material-ui/core\"\nimport { ThemeProvider } from \"styled-components\"\nimport Colorimetric from \"./colorimetric/Colorimetric\"\n\nconst theme = createMuiTheme({\n  palette: {\n    common: { black: '#000', white: '#fff' },\n    background: { paper: '#fff', default: '#fafafa' },\n    primary: {\n      light: '#74c7ff',\n      main: '#38afff',\n      dark: '#22608a',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff3e63',\n      main: '#ff1744',\n      dark: '#ca1336',\n      contrastText: '#fff',\n    },\n  },\n})\n\nconst Calculator = () => (\n  <StylesProvider injectFirst>\n    <ThemeProvider theme={theme}>\n      <Colorimetric />\n    </ThemeProvider>\n  </StylesProvider>\n)\n\nexport default Calculator\n"],"sourceRoot":""}